<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.software.server.dao.mapper.InterfaceMapper">

    <resultMap id="InterfaceResultMap" type="com.software.server.dao.model.InterfaceModel">
        <id column="T_ID" property="id" jdbcType="BIGINT" />
        <result column="T_NAME" property="name" />
        <result column="T_URL" property="url"/>
        <result column="T_METHOD" property="method"/>
        <result column="T_MODULE_ID" property="moduleId"/>
        <result column="T_NORMAL_JSON_RESULT" property="normalJson"/>
        <result column="T_ABNORMAL_JSON_RESULT" property="abnormalJson"/>
        <result column="T_CREATE_TIME" property="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询接口的字段-->
    <sql id="BASE_QUERY_FIELDS">
         T_ID,T_NAME,T_URL,T_METHOD,T_MODULE_ID,
         T_NORMAL_JSON_RESULT,
         T_ABNORMAL_JSON_RESULT,T_CREATE_TIME
    </sql>

    <!--保存接口的字段-->
    <sql id="BASE_INSERT_FIELDS">
         T_NAME,T_URL,T_METHOD,T_MODULE_ID,
         T_NORMAL_JSON_RESULT,
         T_ABNORMAL_JSON_RESULT,T_CREATE_TIME
    </sql>

    <!--更新语句-->
    <sql id="BASE_UPDATE_SQL">
        <set>
            <if test="name!=null and name!=''">
                T_NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="method!=null and method!=''">
                T_METHOD = #{method,jdbcType=VARCHAR},
            </if>
            <if test="url!=null and url!=''">
                T_URL = #{url,jdbcType=VARCHAR},
            </if>
            <if test="moduleId!=null">
                T_MODULE_ID = #{moduleId,jdbcType=VARCHAR},
            </if>
            <if test="normalJson!=null and normalJson!=''">
                T_NORMAL_JSON_RESULT = #{normalJson,jdbcType=VARCHAR},
            </if>
            <if test="abnormalJson!=null and abnormalJson!=''">
                T_ABNORMAL_JSON_RESULT = #{abnormalJson,jdbcType=VARCHAR},
            </if>
            <if test="createTime!=null">
                T_CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
    </sql>

    <!--表名-->
    <sql id="tableN">T_INTERFACE</sql>

    <!--查询所有的接口-->
    <select id="findAll" resultMap="InterfaceResultMap">
         SELECT <include refid="BASE_QUERY_FIELDS"/>
         FROM <include refid="tableN"/>
    </select>

    <!--根据模块查询接口-->
    <select id="findByModule" resultMap="InterfaceResultMap" parameterType="long">
        SELECT <include refid="BASE_QUERY_FIELDS"/>
        FROM <include refid="tableN"/>
        WHERE T_MODULE_ID = #{moduleId,jdbcType=BIGINT}
    </select>

    <!--根据ID查询-->
    <select id="findById" resultMap="InterfaceResultMap" parameterType="long">
        SELECT <include refid="BASE_QUERY_FIELDS"/>
        FROM <include refid="tableN"/>
        WHERE T_ID = #{id,jdbcType=BIGINT}
    </select>

    <!--根据接口url查询-->
    <select id="findByUrl" resultMap="InterfaceResultMap" parameterType="String">
        SELECT <include refid="BASE_QUERY_FIELDS"/>
        FROM <include refid="tableN"/>
        WHERE T_URL = #{url,jdbcType=VARCHAR}
    </select>

    <!--新增角色-->
    <insert id="insert" parameterType="InterfaceModel" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO<include refid="tableN"/>
        (
        <include refid="BASE_INSERT_FIELDS"/>
        )
        VALUES
        (
        #{name,jdbcType=VARCHAR},
        #{url,jdbcType=VARCHAR},
        #{method,jdbcType=VARCHAR},
        #{moduleId,jdbcType=BIGINT},
        #{normalJson,jdbcType=VARCHAR},
        #{abnormalJson,jdbcType=VARCHAR},
        #{createTime,jdbcType=VARCHAR}
        )
    </insert>

    <!--删除接口-->
    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tableN"/> WHERE T_ID = #{id,jdbcType=BIGINT}
    </delete>

    <!--更新接口信息-->
    <update id="update" parameterType="InterfaceModel">
        UPDATE <include refid="tableN"/>
        <include refid="BASE_UPDATE_SQL"/>
        WHERE T_ID = #{id,jdbcType=VARCHAR}
    </update>

    <!--根据URL更新接口信息-->
    <update id="updateByUrl" parameterType="InterfaceModel">
        UPDATE <include refid="tableN"/>
        <include refid="BASE_UPDATE_SQL"/>
        WHERE T_URL = #{url,jdbcType=VARCHAR}
    </update>


</mapper>